--// EsanUI - Part 1: Core UI Setup Module
local UserInputService = game:GetService("UserInputService")

local EsanUI = {}

function EsanUI:CreateUI(settings)
	settings = settings or {}

	local theme = settings.Theme or {
		Primary = Color3.fromRGB(40, 40, 40),
		Accent = Color3.fromRGB(255, 255, 255)
	}

	--== ScreenGui ==--
	local gui = Instance.new("ScreenGui")
	gui.Name = "EsanUI"
	gui.ResetOnSpawn = false
	gui.IgnoreGuiInset = true
	gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	gui.Parent = game:GetService("CoreGui")

	--== Main Frame ==--
	local main = Instance.new("Frame")
	main.Name = "MainFrame"
	main.Size = UDim2.new(0, 600, 0, 420)
	main.Position = UDim2.new(0.5, -300, 0.5, -210)
	main.AnchorPoint = Vector2.new(0.5, 0.5)
	main.BackgroundColor3 = theme.Primary
	main.BorderSizePixel = 0
	main.Parent = gui

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 10)
	corner.Parent = main

	--== TopBar (Title & Logo) ==--
	local topBar = Instance.new("Frame")
	topBar.Size = UDim2.new(1, 0, 0, 40)
	topBar.BackgroundTransparency = 1
	topBar.Parent = main

	local logo = Instance.new("ImageLabel")
	logo.Size = UDim2.new(0, 32, 0, 32)
	logo.Position = UDim2.new(0, 8, 0.5, -16)
	logo.BackgroundTransparency = 1
	logo.Image = "rbxassetid://" .. tostring(settings.Logo or 0)
	logo.Parent = topBar

	local title = Instance.new("TextLabel")
	title.Size = UDim2.new(1, -50, 1, 0)
	title.Position = UDim2.new(0, 50, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = settings.Name or "Esan Hub"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 20
	title.TextColor3 = theme.Accent
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = topBar

	--== Drag Main Frame ==--
	local dragging = false
	local dragStart, startPos

	main.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = main.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	main.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			input.Changed:Connect(function()
				if dragging then
					local delta = input.Position - dragStart
					main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				end
			end)
		end
	end)

	--== Toggle Button (วงกลม) ==--
	local toggleButton = Instance.new("ImageButton")
	toggleButton.Size = UDim2.new(0, 50, 0, 50)
	toggleButton.Position = UDim2.new(0.5, 310, 0.5, -200)
	toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	toggleButton.Image = "rbxassetid://3926305904"
	toggleButton.ImageRectOffset = Vector2.new(284, 4)
	toggleButton.ImageRectSize = Vector2.new(36, 36)
	toggleButton.Parent = gui

	local circleCorner = Instance.new("UICorner")
	circleCorner.CornerRadius = UDim.new(1, 0)
	circleCorner.Parent = toggleButton

	local uiVisible = true
	local function toggleUI()
		uiVisible = not uiVisible
		main.Visible = uiVisible
	end

	toggleButton.MouseButton1Click:Connect(toggleUI)

	--== Drag Toggle Button ==--
	local toggleDragging = false
	local toggleStart, toggleStartPos

	toggleButton.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			toggleDragging = true
			toggleStart = input.Position
			toggleStartPos = toggleButton.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					toggleDragging = false
				end
			end)
		end
	end)

	toggleButton.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			input.Changed:Connect(function()
				if toggleDragging then
					local delta = input.Position - toggleStart
					toggleButton.Position = UDim2.new(toggleStartPos.X.Scale, toggleStartPos.X.Offset + delta.X, toggleStartPos.Y.Scale, toggleStartPos.Y.Offset + delta.Y)
				end
			end)
		end
	end)

	--== Keybind Toggle ==--
	UserInputService.InputBegan:Connect(function(input, gpe)
		if not gpe and input.KeyCode == (settings.DefaultKey or Enum.KeyCode.LeftAlt) then
			toggleUI()
		end
	end)

	--== คืนค่าเพื่อใช้ใน Part ถัดไป ==--
	return {
		Gui = gui,
		Main = main,
		Theme = theme
	}
end

return EsanUI

local function InitTabs(main, theme)
	local tabButtons = {}
	local tabFrames = {}

	--== Tab Bar ==--
	local tabBar = Instance.new("Frame")
	tabBar.Size = UDim2.new(1, 0, 0, 30)
	tabBar.Position = UDim2.new(0, 0, 0, 40)
	tabBar.BackgroundTransparency = 1
	tabBar.Name = "TabBar"
	tabBar.Parent = main

	local contentHolder = Instance.new("Frame")
	contentHolder.Name = "ContentHolder"
	contentHolder.Size = UDim2.new(1, 0, 1, -70)
	contentHolder.Position = UDim2.new(0, 0, 0, 70)
	contentHolder.BackgroundTransparency = 1
	contentHolder.Parent = main

	local function switchTab(tabName)
		for name, frame in pairs(tabFrames) do
			local isActive = name == tabName
			frame.Visible = isActive
			tabButtons[name].BackgroundTransparency = isActive and 0 or 0.5
		end
	end

	local function createsection(tabInfo)
		local title = tabInfo.Title or "Untitled"
		local tabBtn = Instance.new("TextButton")
		tabBtn.Size = UDim2.new(0, 100, 1, 0)
		tabBtn.BackgroundColor3 = theme.Accent
		tabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
		tabBtn.Font = Enum.Font.Gotham
		tabBtn.TextSize = 14
		tabBtn.Text = title
		tabBtn.Parent = tabBar
		tabBtn.Position = UDim2.new(0, (#tabButtons * 105), 0, 0)

		tabButtons[title] = tabBtn

		local tabContent = Instance.new("Frame")
		tabContent.Name = title .. "_Frame"
		tabContent.Size = UDim2.new(1, 0, 1, 0)
		tabContent.BackgroundTransparency = 1
		tabContent.Visible = false
		tabContent.Parent = contentHolder

		tabFrames[title] = tabContent

		tabBtn.MouseButton1Click:Connect(function()
			switchTab(title)
		end)

		if #contentHolder:GetChildren() == 1 then
			switchTab(title)
		end

		local section = {}

		function section.createpage(pageInfo)
			local side = pageInfo.Side or 1
			local pageFrame = Instance.new("ScrollingFrame")
			pageFrame.Size = UDim2.new(0.5, -10, 1, 0)
			pageFrame.Position = side == 1 and UDim2.new(0, 0, 0, 0) or UDim2.new(0.5, 10, 0, 0)
			pageFrame.BackgroundTransparency = 1
			pageFrame.ScrollBarThickness = 5
			pageFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
			pageFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
			pageFrame.Parent = tabContent

			local layout = Instance.new("UIListLayout")
			layout.Padding = UDim.new(0, 6)
			layout.SortOrder = Enum.SortOrder.LayoutOrder
			layout.Parent = pageFrame

			local page = {}

			function page:Add(instance)
				instance.Parent = pageFrame
			end

			return page
		end

		return section
	end

	return createsection
end

-- Part 3 ต้องเรียกหลังจาก createpage แล้ว
-- ต้องมี page:Add(instance) จาก Part 2 ด้วย

local HttpService = game:GetService("HttpService")
local SaveFile = "esanui_config.json"

local savedata = {}
local function loadData()
	if isfile and isfile(SaveFile) then
		local ok, data = pcall(function()
			return HttpService:JSONDecode(readfile(SaveFile))
		end)
		if ok and type(data) == "table" then
			savedata = data
		end
	end
end

local function saveData()
	if writefile then
		local json = HttpService:JSONEncode(savedata)
		writefile(SaveFile, json)
	end
end

loadData()

-- Attach to page
function page:Toggle(info)
	local state = savedata[info.Title] or info.Default or false

	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.Text = (state and "✔ " or "✖ ") .. info.Title
	btn.AutoButtonColor = false

	btn.MouseButton1Click:Connect(function()
		state = not state
		btn.Text = (state and "✔ " or "✖ ") .. info.Title
		savedata[info.Title] = state
		saveData()
		if info.Callback then info.Callback(state) end
	end)

	self:Add(btn)
end

function page:Button(info)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.Text = info.Title or "Button"

	btn.MouseButton1Click:Connect(function()
		if info.Callback then info.Callback() end
	end)

	self:Add(btn)
end

function page:Slider(info)
	local min, max = info.Min or 0, info.Max or 100
	local val = savedata[info.Title] or info.Default or min

	local container = Instance.new("Frame")
	container.Size = UDim2.new(1, -10, 0, 50)
	container.BackgroundTransparency = 1

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 0, 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = info.Title .. ": " .. tostring(val)
	label.Parent = container

	local bar = Instance.new("Frame")
	bar.Size = UDim2.new(1, 0, 0, 18)
	bar.Position = UDim2.new(0, 0, 0, 25)
	bar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	bar.Parent = container
	Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 4)

	local fill = Instance.new("Frame")
	fill.Size = UDim2.new((val - min)/(max - min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
	fill.Parent = bar
	Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 4)

	local inputBox = Instance.new("TextBox")
	inputBox.Size = UDim2.new(0, 50, 0, 20)
	inputBox.Position = UDim2.new(1, 10, 0, 25)
	inputBox.Text = tostring(val)
	inputBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	inputBox.Font = Enum.Font.Gotham
	inputBox.TextSize = 14
	inputBox.TextColor3 = Color3.new(1, 1, 1)
	inputBox.Parent = container
	Instance.new("UICorner", inputBox)

	local dragging = false
	local function update(x)
		local rel = math.clamp((x - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
		val = math.floor(min + (max - min) * rel + 0.5)
		label.Text = info.Title .. ": " .. tostring(val)
		inputBox.Text = tostring(val)
		fill.Size = UDim2.new(rel, 0, 1, 0)
		savedata[info.Title] = val
		saveData()
		if info.Callback then info.Callback(val) end
	end

	bar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			update(input.Position.X)
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			update(input.Position.X)
		end
	end)
	game:GetService("UserInputService").InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	inputBox.FocusLost:Connect(function()
		local number = tonumber(inputBox.Text)
		if number then
			val = math.clamp(number, min, max)
			fill.Size = UDim2.new((val - min) / (max - min), 0, 1, 0)
			label.Text = info.Title .. ": " .. tostring(val)
			savedata[info.Title] = val
			saveData()
			if info.Callback then info.Callback(val) end
		else
			inputBox.Text = tostring(val)
		end
	end)

	self:Add(container)
end

function page:Label(text)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -10, 0, 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.Text = text
	label.TextXAlignment = Enum.TextXAlignment.Left

	self:Add(label)
end

function page:Dropdown(info)
	local selected = (savedata[info.Title] or info.Default or {info.List[1]})[1]
	local isOpen = false

	local container = Instance.new("Frame")
	container.Size = UDim2.new(1, -10, 0, 40)
	container.BackgroundTransparency = 1

	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 30)
	btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.Text = info.Title .. ": " .. selected
	btn.Parent = container

	local dropFrame = Instance.new("Frame")
	dropFrame.Size = UDim2.new(1, 0, 0, #info.List * 25)
	dropFrame.Position = UDim2.new(0, 0, 1, 0)
	dropFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	dropFrame.Visible = false
	dropFrame.Parent = container

	local layout = Instance.new("UIListLayout")
	layout.FillDirection = Enum.FillDirection.Vertical
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = dropFrame

	for _, item in ipairs(info.List) do
		local opt = Instance.new("TextButton")
		opt.Size = UDim2.new(1, 0, 0, 25)
		opt.Text = item
		opt.Font = Enum.Font.Gotham
		opt.TextSize = 14
		opt.TextColor3 = Color3.new(1, 1, 1)
		opt.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		opt.Parent = dropFrame

		opt.MouseButton1Click:Connect(function()
			selected = item
			btn.Text = info.Title .. ": " .. selected
			dropFrame.Visible = false
			isOpen = false
			savedata[info.Title] = {selected}
			saveData()
			if info.Callback then info.Callback({selected}) end
		end)
	end

	btn.MouseButton1Click:Connect(function()
		isOpen = not isOpen
		dropFrame.Visible = isOpen
	end)

	self:Add(container)
end

game:GetService("UserInputService").InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		for _, obj in ipairs(game:GetService("CoreGui"):GetDescendants()) do
			if obj:IsA("Frame") and obj.Name == "DropFrame" then
				obj.Visible = false
			end
		end
	end
end)
